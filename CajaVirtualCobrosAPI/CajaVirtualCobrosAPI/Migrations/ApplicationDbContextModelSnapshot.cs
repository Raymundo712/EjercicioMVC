// <auto-generated />
using System;
using CajaVirtualCobrosAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CajaVirtualCobrosAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CajaVirtualCobrosAPI.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumeroCliente")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Usuario_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Usuario_Id")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("CajaVirtualCobrosAPI.Entidades.ConceptoCobro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("Money");

                    b.HasKey("Id");

                    b.ToTable("Conceptos");
                });

            modelBuilder.Entity("CajaVirtualCobrosAPI.Entidades.EstadoCuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cliente_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("Money");

                    b.HasKey("Id");

                    b.HasIndex("Cliente_Id")
                        .IsUnique();

                    b.ToTable("EstadosCuenta");
                });

            modelBuilder.Entity("CajaVirtualCobrosAPI.Entidades.Movimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Abono")
                        .HasColumnType("Money");

                    b.Property<int?>("ConceptoCobro_Id")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoCuentaId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoCuenta_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConceptoCobro_Id");

                    b.HasIndex("EstadoCuentaId");

                    b.HasIndex("EstadoCuenta_Id");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("CajaVirtualCobrosAPI.Entidades.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CajaVirtualCobrosAPI.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Rol_Id")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioNombre")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Rol_Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CajaVirtualCobrosAPI.Entidades.Cliente", b =>
                {
                    b.HasOne("CajaVirtualCobrosAPI.Entidades.Usuario", "Usuario")
                        .WithOne("Cliente")
                        .HasForeignKey("CajaVirtualCobrosAPI.Entidades.Cliente", "Usuario_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CajaVirtualCobrosAPI.Entidades.EstadoCuenta", b =>
                {
                    b.HasOne("CajaVirtualCobrosAPI.Entidades.Cliente", "Cliente")
                        .WithOne("EstadoCuenta")
                        .HasForeignKey("CajaVirtualCobrosAPI.Entidades.EstadoCuenta", "Cliente_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CajaVirtualCobrosAPI.Entidades.Movimiento", b =>
                {
                    b.HasOne("CajaVirtualCobrosAPI.Entidades.ConceptoCobro", "ConceptoCobro")
                        .WithMany()
                        .HasForeignKey("ConceptoCobro_Id");

                    b.HasOne("CajaVirtualCobrosAPI.Entidades.EstadoCuenta", null)
                        .WithMany("Movimientos")
                        .HasForeignKey("EstadoCuentaId");

                    b.HasOne("CajaVirtualCobrosAPI.Entidades.EstadoCuenta", "EstadoCuenta")
                        .WithMany()
                        .HasForeignKey("EstadoCuenta_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConceptoCobro");

                    b.Navigation("EstadoCuenta");
                });

            modelBuilder.Entity("CajaVirtualCobrosAPI.Entidades.Rol", b =>
                {
                    b.HasOne("CajaVirtualCobrosAPI.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CajaVirtualCobrosAPI.Entidades.Usuario", b =>
                {
                    b.HasOne("CajaVirtualCobrosAPI.Entidades.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("Rol_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("CajaVirtualCobrosAPI.Entidades.Cliente", b =>
                {
                    b.Navigation("EstadoCuenta");
                });

            modelBuilder.Entity("CajaVirtualCobrosAPI.Entidades.EstadoCuenta", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("CajaVirtualCobrosAPI.Entidades.Usuario", b =>
                {
                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
